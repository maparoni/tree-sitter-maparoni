==================
Equality
==================

distance == 20

---

(expression
  (binary_expression
    (identifier)
    (number)))

==================
Arithmetic
==================

4.5 * 10 == 40 + 5

---

(expression
  (binary_expression
    (binary_expression
      (number)
      (number))
    (binary_expression
      (number)
      (number))))

==================
Prefixes
==================

-4.5 * +10 == -45

---

(expression
  (binary_expression
    (binary_expression
      (prefix_expression
        (number))
      (prefix_expression
        (number)))
    (prefix_expression
      (number))))

==================
Field access
==================

geometry.area

---

(expression
  (field_access
    (identifier)
    (identifier)))

==================
Gradient comparison
==================

gradient(25, 'traffic', 0, 50) == yellow

---

(expression
  (binary_expression
    (method_invocation
      (identifier)
      (argument_list
        (number)
        (string)
        (number)
        (number)
      )
    )
    (identifier)
  )
)

==================
Gradient comparison 2
==================

gradient(25, 'alpha', 0, 50, red) == RGB(255, 0, 0, 0.5)

---

(expression
  (binary_expression
    (method_invocation
      (identifier)
      (argument_list
        (number)
        (string)
        (number)
        (number)
        (identifier)))
    (method_invocation
      (known_type)
      (argument_list
        (number)
        (number)
        (number)
        (number)))))

==================
Function call on identifier
==================

geometry.fill(red)

---

(expression
  (method_invocation
    (identifier)
    (identifier)
    (argument_list
      (identifier))))
    

==================
Function call on function
==================

line(Position(33, -151)).fill(green)

---

(expression
  (method_invocation
    (method_invocation
      (identifier)
      (argument_list
        (method_invocation
          (known_type)
          (argument_list
            (number)
            (prefix_expression
              (number))))))
    (identifier)
    (argument_list
      (identifier))))