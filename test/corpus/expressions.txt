==================
Equality
==================

distance == 20

---

(expression
  (binary_expression
    (constant)
    (number)))

==================
Arithmetic
==================

4.5 * 10 == 40 + 5

---

(expression
  (binary_expression
    (binary_expression
      (number)
      (number))
    (binary_expression
      (number)
      (number))))

==================
Prefixes
==================

-4.5 * +10 == -45

---

(expression
  (binary_expression
    (binary_expression
      (prefix_expression
        (number))
      (prefix_expression
        (number)))
    (prefix_expression
      (number))))

==================
Field access
==================

geometry.area

---

(expression
  (field_access
    (constant)
    (identifier)))

==================
Gradient comparison
==================

gradient(25, 'traffic', 0, 50) == yellow

---

(expression
  (binary_expression
    (method_invocation
      (identifier)
      (argument_list
        (number)
        (string)
        (number)
        (number)
      )
    )
    (constant)
  )
)

==================
Gradient comparison 2
==================

gradient(25, 'alpha', 0, 50, red) == RGB(255, 0, 0, 0.5)

---

(expression
  (binary_expression
    (method_invocation
      (identifier)
      (argument_list
        (number)
        (string)
        (number)
        (number)
        (constant)))
    (method_invocation
      (type_identifier)
      (argument_list
        (number)
        (number)
        (number)
        (number)))))

==================
Function call on identifier
==================

geometry.fill(red)

---

(expression
  (method_invocation
    (constant)
    (identifier)
    (argument_list
      (constant))))
    

==================
Function call on function
==================

line(Position(33, -151)).fill(green)

---

(expression
  (method_invocation
    (method_invocation
      (identifier)
      (argument_list
        (method_invocation
          (type_identifier)
          (argument_list
            (number)
            (prefix_expression
              (number))))))
    (identifier)
    (argument_list
      (constant))))

================================================================================
Conjunction with call sites
================================================================================

a
    && c.b()

--------------------------------------------------------------------------------

(expression
  (binary_expression
    (identifier)
    (method_invocation
      (identifier)
      (identifier)
      (argument_list))))

================================================================================
Nil coalescing
================================================================================

nil ?? something

--------------------------------------------------------------------------------

(expression
  (binary_expression
    (nil)
    (identifier)))

================================================================================
Ternary expression
================================================================================

someVeryLongFunctionCall()
    ? doSomethingHere()
    : fallback

--------------------------------------------------------------------------------

(expression
  (ternary_expression
    (method_invocation
      (identifier)
      (argument_list))
    (method_invocation
      (identifier)
      (argument_list))
    (identifier)))

================================================================================
Switch with open ranges
================================================================================

switch(dist)
  .case(..<2000, "🚶‍♂️")
  .case(..<10000, "🚴‍♀️")
  .default("🚌")

--------------------------------------------------------------------------------

(expression
  (method_invocation
    (method_invocation
      (method_invocation
        (method_invocation
          (identifier)
          (argument_list
            (identifier)))
        (identifier)
        (argument_list
          (open_start_range_expression
            (number))
          (string)))
      (identifier)
      (argument_list
        (open_start_range_expression
          (number))
        (string)))
    (identifier)
    (argument_list
      (string))))

================================================================================
Switch with closed range
================================================================================

switch(name)
  .case("Covid-19 in NSW",
    switch(covidLastWeek)
      .case(0, clear)
      .case(1...5, yellow)
      .default(red)
      .alpha(0.2)
  )
  .case("Sydney Friends", blue)
  .default(black)

--------------------------------------------------------------------------------

(expression
  (method_invocation
    (method_invocation
      (method_invocation
        (method_invocation
          (identifier)
          (argument_list
            (identifier)))
        (identifier)
        (argument_list
          (string)
          (method_invocation
            (method_invocation
              (method_invocation
                (method_invocation
                  (method_invocation
                    (identifier)
                    (argument_list
                      (identifier)))
                  (identifier)
                  (argument_list
                    (number)
                    (constant)))
                (identifier)
                (argument_list
                  (range_expression
                    (number)
                    (number))
                  (constant)))
              (identifier)
              (argument_list
                (constant)))
            (identifier)
            (argument_list
              (number)))))
      (identifier)
      (argument_list
        (string)
        (constant)))
    (identifier)
    (argument_list
      (constant))))