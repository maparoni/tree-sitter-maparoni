==================
Equality
==================

distance == 20

---

(source_file
  (equality_expression
    (identifier)
    (number)))

==================
Arithmetic
==================

4.5 * 10 == 40 + 5

---

(source_file
  (equality_expression
    (multiplicative_expression
      (number)
      (number))
    (additive_expression
      (number)
      (number))))

==================
Prefixes
==================

-4.5 * +10 == -45

---

(source_file
  (equality_expression
    (prefix_expression
      (multiplicative_expression
        (number)
        (prefix_expression
          (number))))
    (prefix_expression
      (number))))

==================
Gradient comparison
==================

gradient(25, 'traffic', 0, 50) == yellow

---

(source_file
  (equality_expression
    (call_expression
      (identifier)
      (argument_list
        (number)
        (string)
        (number)
        (number)
      )
    )
    (identifier)
  )
)

==================
Gradient comparison 2 (SIC)
==================

gradient(25, 'alpha', 0, 50, red) == RGB(255, 0, 0, 0.5)

---

(source_file
  (call_expression
    (equality_expression
      (call_expression
        (identifier)
        (argument_list
          (number)
          (string)
          (number)
          (number)
          (identifier)))
    (identifier))
  (argument_list
    (number)
    (number)
    (number)
    (number))))

==================
Function call on identifier
==================

geometry.fill(Color)

---

(source_file
  (call_expression
    (navigation_expression
      (identifier)
      (navigation_suffix
        (identifier)))
    (argument_list
      (identifier))))
    

==================
Function call on function
==================

line(Coordinate).fill(Color)

---

(source_file
  (call_expression
    (navigation_expression
      (call_expression
        (identifier)
        (argument_list
          (identifier)))
      (navigation_suffix
        (identifier)))
    (argument_list
      (identifier))))